#include "hardware.h"

void ADC_Configuration(void);

/*********************************************************************************************
 * Initialize LEDs
 *********************************************************************************************/
void ledInit() {
	GPIO_InitTypeDef  GPIO_InitStructure;

	// Enable clock
	RCC_AHB1PeriphClockCmd( LED_LIGHT_NS_CLK | LED_LIGHT_EW_CLK | LED_WIFI_CLK | LED_BLUETOOTH_CLK | LED_ERROR_CLK, ENABLE);

	// Configure GPIO
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;

	GPIO_InitStructure.GPIO_Pin = LED_LIGHT_NS_PINS;
	GPIO_Init(LED_LIGHT_NS_PORT, &GPIO_InitStructure);

	GPIO_InitStructure.GPIO_Pin = LED_LIGHT_EW_PINS;
	GPIO_Init(LED_LIGHT_EW_PORT, &GPIO_InitStructure);

	GPIO_InitStructure.GPIO_Pin = LED_WIFI_PINS;
	GPIO_Init(LED_WIFI_PORT, &GPIO_InitStructure);

	GPIO_InitStructure.GPIO_Pin = LED_BLUETOOTH_PIN;
	GPIO_Init(LED_BLUETOOTH_PORT, &GPIO_InitStructure);

	GPIO_InitStructure.GPIO_Pin = LED_ERROR_PIN;
	GPIO_Init(LED_ERROR_PORT, &GPIO_InitStructure);

	// Make sure all LEDs are off
	LED_LIGHT_NS_PORT->OFF = LED_LIGHT_NS_PINS;
	LED_LIGHT_EW_PORT->OFF = LED_LIGHT_EW_PINS;
	LED_WIFI_PORT->OFF = LED_WIFI_PINS;
	LED_BLUETOOTH_PORT->OFF = LED_BLUETOOTH_PIN;
	LED_ERROR_PORT->OFF = LED_ERROR_PIN;

	// Initialize Traffic Light timer
	blinkTrafficLight = swTimerInit( 400, REPEAT, prvblinkTrafficLightCallback );
}


/*********************************************************************************************
 * Initialize WiFi USART GPIO
 *********************************************************************************************/
void wifiInit() {
	GPIO_InitTypeDef     GPIO_InitStruct;

	// Enable clock
	RCC_AHB1PeriphClockCmd(WIFI_CLK, ENABLE);

	// Set Pins to alternate function
	GPIO_PinAFConfig(WIFI_PORT, WIFI_TX_PINSOURCE, WIFI_AF);
	GPIO_PinAFConfig(WIFI_PORT, WIFI_RX_PINSOURCE, WIFI_AF);

	// Initialize pins as alternating function
	GPIO_InitStruct.GPIO_Pin = WIFI_TX_PIN | WIFI_RX_PIN;
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
	GPIO_Init(WIFI_PORT, &GPIO_InitStruct);

	wifiConfig();
}


/*********************************************************************************************
 * Initialize WiFi USART
 *********************************************************************************************/
void wifiConfig() {
	USART_InitTypeDef USART_InitStruct;
	NVIC_InitTypeDef NVIC_InitStruct;

	// Enable clock
	RCC_APB1PeriphClockCmd(WIFI_USART_CLK, ENABLE);

	// Initialize USART
	USART_InitStruct.USART_BaudRate = WIFI_USART_BAUD;
	USART_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
	USART_InitStruct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx;
	USART_InitStruct.USART_Parity = USART_Parity_No;
	USART_InitStruct.USART_StopBits = USART_StopBits_1;
	USART_InitStruct.USART_WordLength = USART_WordLength_8b;
	USART_Cmd(WIFI_USART, ENABLE);
	USART_Init(WIFI_USART, &USART_InitStruct);

	// Enable RX interrupt
	USART_ITConfig(WIFI_USART, USART_IT_RXNE, ENABLE);

	// Initialize NVIC
	NVIC_InitStruct.NVIC_IRQChannel = WIFI_USART_IRQ;
	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = 0;
	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0;
	NVIC_Init(&NVIC_InitStruct);
}


/* %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 * Define Pin Mappings
 * %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% */

/*********************************************************************************************
 * LED pin map
 *********************************************************************************************/
uint16_t led_light_ns_pin[3] = {LED_LIGHT_NS_RED_PIN, LED_LIGHT_NS_YELLOW_PIN, LED_LIGHT_NS_GREEN_PIN};
uint16_t led_light_ew_pin[3] = {LED_LIGHT_EW_RED_PIN, LED_LIGHT_EW_YELLOW_PIN, LED_LIGHT_EW_GREEN_PIN};
