/*
 * ultrasonic.h
 *
 *  Created on: Apr 12, 2016
 *      Author: Parker
 */

#ifndef ULTRASONIC_H_
#define ULTRASONIC_H_

#include "FreeRTOS.h"
#include "stm32f4xx.h"
#include "general.h"
#include "hardware.h"


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 * Define Ultrasonic Tasks
 *%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% */

/* The sequence for getting an ultrasonic value is as follows
 * 1. Set the pin to an output
 * 2. Send a 10us pulse on the pin
 * 3. Set the pin to an input
 * 4. Enable interrupts to look for rising edge of the length indicating pulse
 * 5. Wait till we're finished reading the pulse
 * 6. Disable interrupts
 * 7. Grab the timer value
 * 8. Set the pin back to an output(this makes sure the line is tied low)
 * This is performed sequencially for each of the three sensors*/


/*********************************************************************************************
 * Ultrasonic data collection and processing task
 *********************************************************************************************/
void prvUltrasonic1Task( void *pvParameters );
void prvUltrasonic2Task( void *pvParameters );
void prvUltrasonic3Task( void *pvParameters );

TaskHandle_t xUltrasonic1Handle;
TaskHandle_t xUltrasonic2Handle;
TaskHandle_t xUltrasonic3Handle;

#define	ultrasonicPriority					( tskIDLE_PRIORITY + 2 )

#define ultrasonicFreq						( 500 / portTICK_PERIOD_MS)


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 * Define Helper Functions
 *%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% */

/*********************************************************************************************
 * Sets a pin on port A to input mode
 *********************************************************************************************/
void setInput(uint16_t pin);


/*********************************************************************************************
 * Sets a pin on port A to output mode
 *********************************************************************************************/
void setOutput(uint16_t pin);


/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 * Global Variables
 *%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% */

/*********************************************************************************************
 * Global reference to ultrasonic distances
 *********************************************************************************************/
volatile int distCM_front;
volatile int distCM_left;
volatile int distCM_right;


/*********************************************************************************************
 * Timer value for ultrasonic counters
 *********************************************************************************************/
volatile int timerValue1;
volatile int timerValue2;
volatile int timerValue3;


/*********************************************************************************************
 * Boolean indicating when a timer value is ready to be read
 *********************************************************************************************/
volatile int done1;
volatile int done2;
volatile int done3;


#endif /* ULTRASONIC_H_ */
